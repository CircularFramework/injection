{"version":3,"sources":["../../src/decorators/injectable.decorator.js"],"names":["Injectable","config","item","undefined","token","name","dependency","bind","dependencies","Array","isArray","addDependencies","args","addArgs","singleton","setSingleton"],"mappings":";;;;;QASgBA,U,GAAAA,U;;AARhB;;AAEA;;;;;;AAMO,SAASA,UAAT,CAAoBC,MAApB,EAA4B;AAClC,QAAO,UAASC,IAAT,EAAe;AACrB;AACA,MAAID,WAAWE,SAAX,IAAwBF,OAAOG,KAAP,KAAiBD,SAA7C,EAAwD,6CAA2CD,KAAKG,IAAhD;;AAExD;AACA,MAAIC,aAAa,gBAASC,IAAT,CAAcN,OAAOG,KAArB,EAA4BF,IAA5B,CAAjB;;AAEA;AACA,MAAID,OAAOO,YAAP,KAAwBL,SAAxB,IAAqCM,MAAMC,OAAN,CAAcT,OAAOO,YAArB,CAAzC,EAA6E;AAC5EF,cAAWK,eAAX,CAA2BV,OAAOO,YAAlC;AACA;;AAED;AACA,MAAIP,OAAOW,IAAP,KAAgBT,SAAhB,IAA6BM,MAAMC,OAAN,CAAcT,OAAOW,IAArB,CAAjC,EAA6D;AAC5DN,cAAWO,OAAX,CAAmBZ,OAAOW,IAA1B;AACA;;AAED;AACA,MAAIX,OAAOa,SAAP,KAAqBX,SAArB,IAAkC,OAAOF,OAAOa,SAAd,KAA4B,SAAlE,EAA6E;AAC5ER,cAAWS,YAAX,CAAwBd,OAAOa,SAA/B;AACA;AACD,EArBD;AAsBA,C,CAhCD","file":"injectable.decorator.js","sourcesContent":["/** import dependencies */\nimport { Injector } from '../index';\n\n/**\n * Injectable\n * A decorator that will create a Dependency in the Injector for use inside the application\n * @param {object} config The configuration of the dependency\n * @returns {function} A function executed to decorate the Injectable\n */\nexport function Injectable(config) {\n\treturn function(item) {\n\t\t/** make sure a token is present */\n\t\tif (config === undefined || config.token === undefined) throw `No token set for injectable item. ${item.name}`;\n\n\t\t/** add the dependency to the Injector */\n\t\tlet dependency = Injector.bind(config.token, item);\n\t\t\n\t\t/** check for dependencies */\n\t\tif (config.dependencies !== undefined && Array.isArray(config.dependencies)) {\n\t\t\tdependency.addDependencies(config.dependencies);\n\t\t}\n\n\t\t/** check for args */\n\t\tif (config.args !== undefined && Array.isArray(config.args)) {\n\t\t\tdependency.addArgs(config.args);\n\t\t}\n\n\t\t/** check for singleton */\n\t\tif (config.singleton !== undefined && typeof config.singleton === 'boolean') {\n\t\t\tdependency.setSingleton(config.singleton);\n\t\t}\n\t}\n}"]}